<?php

/**
 * @file
 * Contains hooks for the open_vocabularies_test module.
 */

declare(strict_types = 1);

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_vocabulary_reference_handler_info_alter().
 */
function open_vocabularies_test_vocabulary_reference_handler_info_alter(array &$info) {
  $info['test_alter_hook']['definition_altered'] = TRUE;
}

/**
 * Implements hook_ENTITY_TYPE_access().
 *
 * Adds a cache tag when the operation "view label" is being checked for access.
 *
 * @see \Drupal\Tests\open_vocabularies\Kernel\VocabularyReferenceFormatterTest::testLabelFormatter()
 */
function open_vocabularies_test_entity_test_with_bundle_access(EntityInterface $entity, $operation, AccountInterface $account) {
  $result = AccessResult::neutral();

  if ($operation === 'view label') {
    $result->addCacheTags(['open_vocabularies_test_access_tag:' . $entity->id()]);
  }

  return $result;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function open_vocabularies_test_form_open_vocabulary_association_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['rebuild'] = [
    '#type' => 'submit',
    '#value' => t('Test rebuild'),
    '#weight' => -10,
    '#submit' => ['_open_vocabularies_test_form_rebuild'],
  ];
}

/**
 * Sets a form to be rebuilt.
 */
function _open_vocabularies_test_form_rebuild(array &$form, FormStateInterface $form_state): void {
  $form_state->setRebuild();
}
